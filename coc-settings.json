{
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"],
      "rootPatterns": [".ccls", "compile_commands.json", ".git/", ".hg/"],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls"
        }

      }
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": []
    },
    "efm": {
      "command": "efm-langserver",
      "args": [],
      "filetypes": ["vim", "lua"]
    }
  },
  "snippets.userSnippetsDirectory": "~/.config/nvim/UltiSnips/",
  "coc.preferences.colorSupport": true,
  "tsserver.enable": true,
  "explorer.icon.enableNerdfont": true,
  "explorer.icon.source": "vim-devicons",
  "diagnostic.enable": true,
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic.checkCurrentLine": true,
  "diagnostic-languageserver.trace.server": "verbose",
  "diagnostic-languageserver.mergeConfig": true,
  "diagnostic-languageserver.linters": {
    "languagetool": {
      "args": ["-l", "en-US", "-"],
      "formatPattern": [
        "^\\d+?\\.\\)\\s+Line\\s+(\\d+),\\s+column\\s+(\\d+),\\s+([^\\n]+)(\n)Message:\\s+(.*)(\\r|\\n)*(\\s+(.*)(\\r|\\n)*)$",
        {
          "line": 1,
          "column": 2,
          "message": [5, 7, 4, 3]
        }
      ],
      "formatLines": 3
    }
  },
  "diagnostic-languageserver.filetypes": {
    "vim": "vint",
    "email": "languagetool",
    "markdown": ["markdownlint"],
    "sh": "shellcheck",
    "elixir": ["mix_credo", "mix_credo_compile"],
    "eelixir": ["mix_credo", "mix_credo_compile"],
    "php": ["phpstan", "psalm"],
    "yaml": ["yamllint"],
    "cmake": ["cmake-lint", "cmakelint"],
    "systemd": "systemd-analyze"
  },
  "diagnostic-languageserver.formatFiletypes": {
    "dart": "dartfmt",
    "elixir": "mix_format",
    "eelixir": "mix_format",
    "python": ["black", "isort"],
    "lua": "lua-format",
    "sh": "shfmt",
    "blade": "blade-formatter",
    "cmake": "cmake-format"
  }
}
